@###############################################
@#
@# ROS message source code generation for ROSc
@#
@# EmPy template for generating <msg>.h files
@#
@###############################################
@# Start of Template
@#
@# Context:
@# TODO
@###############################################
/* Software License Agreement (BSD License)
 *
 * Copyright (c) 2011, Willow Garage, Inc.
 * Copyright (c) 2013, Synapticon GmbH
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above
 *    copyright notice, this list of conditions and the following
 *    disclaimer in the documentation and/or other materials provided
 *    with the distribution.
 *  * Neither the name of the copyright holders nor the names of their
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * Auto-generated by genmsg_c from file @file_name_in
 *
 */
@{
#Import python modules used for building the template
import genmsg.msgs 
import gencpp
import genc


msg_definition = gencpp.escape_message_definition(msg_definition)
rosc_gen = genc.msg_static(spec, search_path)
}@

/* *********************
** Message definition **
***********************/
/*
@(msg_definition)
*/

#ifndef @(spec.package.upper())_MESSAGE_@(spec.short_name.upper())_H
#define @(spec.package.upper())_MESSAGE_@(spec.short_name.upper())_H

/* ****************************
** Includes for dependencies **
******************************/
@{
for field in spec.parsed_fields():
  if (not field.is_builtin):
    if (field.is_header):
      print '#include <rosc/msg/std_msgs/Header.h>'
    else:
      (package, name) = genmsg.names.package_resource_name(field.base_type)
      package = package or spec.package # convert '' to package
      print '#include <rosc/msg/%s/%s.h>'%(package, name)

##
## Define some strings which might be changed later
##
#rosc msg prefix
(package, name) = genmsg.names.package_resource_name(spec.full_name)
rosc_name_pack=package + '__' + name
rosc_pref= 'rosc_static_msg' 
rosc_usertype = rosc_pref + '_user_def' + "__" + rosc_name_pack + "__ ## USER_TYPE ## _t"
rosc_usertype_storage = rosc_pref + '_user_def_msg_storage' + "__" + rosc_name_pack + "__ ## USER_TYPE ## _t"
rosc_static_submessage_state = "ROSC_STATIC_SUBMESSAGE_STATES_MEMORY_OFFSET__" + rosc_name_pack
rosc_usertype_def = rosc_pref.upper() + '_USER_DEF' + "__" + rosc_name_pack
rosc_buildup = rosc_pref + '_buildup'
rosc_padding = rosc_pref + '_padding__' + rosc_name_pack
rosc_len = rosc_pref + '_array_size_list__' + rosc_name_pack
}@

/* ************
** Constants **
**************/

/*Not implemented yet*/

/* *************
** Constants2 **
***************/

/*Not implemented yet*/

/* *******************************
** Static Userdefinable Message **
*********************************/
#define @(rosc_usertype_def)(\
@##################################
@# Printing the macro parameters ##
@##################################
    USER_TYPE@[for sizef in rosc_gen.get_static_struct_size_fields()]@
@[if not sizef.isdigit()],\
    @(sizef)@
@[end if]@
@[end for]\
)\
@########################
@# Printing the struct ##
@########################
typedef @(rosc_gen.get_static_struct().replace('\n','\\\n'))@(rosc_usertype);\
@##########################
@# Memory Storage Struct ##
@##########################
typedef struct\
{\
    @(rosc_usertype) __msg;\
@[ if rosc_gen.get_submessage_depth()>0 ]@
    rosc_msg_submessage_state_t submessage_state[@(rosc_gen.get_submessage_depth())];\
@[end if]@
}@(rosc_usertype_storage);\
@########################################
@# Printing the array size information ##
@########################################
const size_t @(rosc_len)__ ## USER_TYPE[]=\
{\
    @(len(rosc_gen.get_static_struct_size_fields()))@
@[for field in rosc_gen.get_static_struct_size_fields()],\
    @(field)@
@[end for]\
};\
@###########################################
@# Printing substructure size information ##
@###########################################
const size_t @(rosc_pref)_submessage_size_list__@(rosc_name_pack)__ ## USER_TYPE []=\
{\
    @(len(rosc_gen.get_static_in_substructure_sizes()))@
@[for field in rosc_gen.get_static_in_substructure_sizes()],\
    sizeofmember(@(rosc_usertype),@(field.replace('.','',1)))@
@[end for]\
};\
@#########################################
@# Printing memory location information ##
@#########################################
const size_t @(rosc_pref)_memory_offsets__@(rosc_name_pack)__ ## USER_TYPE []=\
{\
    @(len(rosc_gen.get_static_member_offsets()))@
@[for (struct, member) in rosc_gen.get_static_member_offsets()],\
@[ if struct == '']@
    offsetof(@(rosc_usertype),@(member))@
@[ else]@
    offsetofsub(@(rosc_usertype),@(struct),@(member))@
@[ end if]@
@[end for]\
}

@##############################
@# Static array state offset ##
@##############################
#define @(rosc_static_submessage_state)(USER_TYPE)\
@[ if rosc_gen.get_submessage_depth()>0 ]@
    offsetof(@(rosc_usertype_storage),submessage_state)
@[else]@
    0
@[end if]@


@##############################
@# Buildup,Definition,MD5Sum ##
@##############################
#define @(rosc_pref.upper())_BUILDUP__@(rosc_name_pack)()\
ros_buildup_type_t @(rosc_pref)_buildup__@(rosc_name_pack)[]=\
{\
@{first = True}@
@[for (indent, entry, additionalreturn) in rosc_gen.get_static_buildup_array()]@
@[ if first]@
@{  first = False}@
@[ else]@
,\
@[ end if]@
@[for i in range(indent)]    @[end for]@(entry)@
@[end for]\
};\
const int8_t  @(rosc_pref)_topic_type__@(rosc_name_pack)[]="@(package)/@(name)";\
const int8_t  @(rosc_pref)_message_definition__@(rosc_name_pack)[]="@(msg_definition)";\
const int8_t  @(rosc_pref)_md5sum__@(rosc_name_pack)[]= "@(genmsg.gentools.compute_md5(msg_context, spec))";
                               
                                    
/* **************************************************
** Static subscriber topics memory size list entry **
****************************************************/
#define ROSC_SIZE_LIST_ENTRY__@(rosc_name_pack)(USER_TYPE)\
    @(rosc_usertype_storage)  user_type_entry__@(rosc_name_pack)__ ## USER_TYPE;

/* **************************************
** Callback function head for usertype **
****************************************/
#define ROSC_STATIC_CALLBACK_HEAD__@(rosc_name_pack)(USER_TYPE, SUBSCRIBER_VAR)\
void rosc_static_callback_## SUBSCRIBER_VAR(void* const __msg)\
{\
    @(rosc_usertype)* const msg=(@(rosc_usertype)* const) __msg;\
 
/* ***************************************
** Subscriber creation macro            **
*****************************************/                                
#define ROSC_STATIC_SUBSCRIBER_INIT__@(rosc_name_pack)(USER_TYPE, SUBSCRIBER_VAR, TOPIC_REG_STR)\
ros_iface_init_t rosc_static_subscriber_init__##SUBSCRIBER_VAR={TOPIC_REG_STR,\
                            @(rosc_pref)_topic_type__@(rosc_name_pack),\
                            ROS_HANDLER_TYPE_TOPIC_SUBSCRIBER,\
                            @(rosc_pref)_buildup__@(rosc_name_pack),\
                            @(rosc_pref)_submessage_size_list__@(rosc_name_pack)__## USER_TYPE,\
                            @(rosc_len)__## USER_TYPE,\
                            @(rosc_pref)_memory_offsets__@(rosc_name_pack)__## USER_TYPE,\
                            @(rosc_pref)_message_definition__@(rosc_name_pack),\
                            @(rosc_pref)_md5sum__@(rosc_name_pack),\
@[ if rosc_gen.get_submessage_depth()>0 ]@
                            offsetof(@(rosc_usertype_storage),submessage_state),\
@[else]@
                            0,\
@[end if]@
                            &rosc_static_callback_## SUBSCRIBER_VAR,\
                            };\
iface_t SUBSCRIBER_VAR={\
           &ros_handler,\
           &rosc_static_subscriber_init__##SUBSCRIBER_VAR};\



/* ***************************************
** Publisher creation macro            **
*****************************************/                                
#define ROSC_STATIC_PUBLISHER_INIT__@(rosc_name_pack)(USER_TYPE, PUBLISHER_VAR, TOPIC_REG_STR)\
ros_iface_init_t rosc_static_subscriber_init__##PUBLISHER_VAR={TOPIC_REG_STR,\
                            @(rosc_pref)_topic_type__@(rosc_name_pack),\
                            ROS_HANDLER_TYPE_TOPIC_PUBLISHER,\
                            @(rosc_pref)_buildup__@(rosc_name_pack),\
                            @(rosc_pref)_submessage_size_list__@(rosc_name_pack)__## USER_TYPE,\
                            @(rosc_len)__## USER_TYPE,\
                            @(rosc_pref)_memory_offsets__@(rosc_name_pack)__## USER_TYPE,\
                            @(rosc_pref)_message_definition__@(rosc_name_pack),\
                            @(rosc_pref)_md5sum__@(rosc_name_pack),\
@[ if rosc_gen.get_submessage_depth()>0 ]@
                            offsetof(@(rosc_usertype_storage),submessage_state),\
@[else]@
                            0,\
@[end if]@
                            0,\
                            };\
iface_t PUBLISHER_VAR={\
           &ros_handler,\
           &rosc_static_subscriber_init__##PUBLISHER_VAR};\






#endif /* @(spec.package.upper())_MESSAGE_@(spec.short_name.upper())_H */
